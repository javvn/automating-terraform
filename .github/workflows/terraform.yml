name: 'Terraform'

on             :
  push         :
    branches   :
      - main
  pull_request :

# permissions    :
#   contents     : read
permissions:
  id-token: write
  contents: read
#   issues: write
  pull-requests: write

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash

    steps:
    - id   : checkout
      name : Checkout
      uses : actions/checkout@v3

    - id   : set_tf
      name : Setup Terraform
      uses : hashicorp/setup-terraform@v2
      with :
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
#         terraform_wrapper: false

    - name : Terraform Init
      id   : init
      run  : terraform init
      continue-on-error: true

    - name : Terraform Validate
      id   : validate
      run  : terraform validate -no-color
      continue-on-error: true

    - name: Terraform Plan
      id: plan
      if: github.event_name == 'pull_request'
      run: terraform plan -no-color
      continue-on-error: true

    - name: Update Pull Request
      uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      env:
        PLAN: "${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
              const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
              #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
              #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
              <details><summary>Validation Output</summary>

              \`\`\`\n
              ${{ steps.validate.outputs.stdout }}
              \`\`\`

              </details>

              #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

              <details><summary>Show Plan</summary>

              \`\`\`\n
              ${process.env.PLAN}
              \`\`\`

              </details>

              *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;

              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
              })

    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1

    - name : Terraform Apply
      id   : apply
      if   : github.ref == 'refs/heads/main' && github.event_name == 'push'
      run  : terraform apply --auto-approve
      continue-on-error: true

    - run : ls -al
    - run : pwd
